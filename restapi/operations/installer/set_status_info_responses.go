// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openshift/assisted-service/models"
)

// SetStatusInfoNoContentCode is the HTTP code returned for type SetStatusInfoNoContent
const SetStatusInfoNoContentCode int = 204

/*SetStatusInfoNoContent Success.

swagger:response setStatusInfoNoContent
*/
type SetStatusInfoNoContent struct {
}

// NewSetStatusInfoNoContent creates SetStatusInfoNoContent with default headers values
func NewSetStatusInfoNoContent() *SetStatusInfoNoContent {

	return &SetStatusInfoNoContent{}
}

// WriteResponse to the client
func (o *SetStatusInfoNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// SetStatusInfoBadRequestCode is the HTTP code returned for type SetStatusInfoBadRequest
const SetStatusInfoBadRequestCode int = 400

/*SetStatusInfoBadRequest Error.

swagger:response setStatusInfoBadRequest
*/
type SetStatusInfoBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewSetStatusInfoBadRequest creates SetStatusInfoBadRequest with default headers values
func NewSetStatusInfoBadRequest() *SetStatusInfoBadRequest {

	return &SetStatusInfoBadRequest{}
}

// WithPayload adds the payload to the set status info bad request response
func (o *SetStatusInfoBadRequest) WithPayload(payload *models.Error) *SetStatusInfoBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the set status info bad request response
func (o *SetStatusInfoBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SetStatusInfoBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SetStatusInfoUnauthorizedCode is the HTTP code returned for type SetStatusInfoUnauthorized
const SetStatusInfoUnauthorizedCode int = 401

/*SetStatusInfoUnauthorized Unauthorized.

swagger:response setStatusInfoUnauthorized
*/
type SetStatusInfoUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewSetStatusInfoUnauthorized creates SetStatusInfoUnauthorized with default headers values
func NewSetStatusInfoUnauthorized() *SetStatusInfoUnauthorized {

	return &SetStatusInfoUnauthorized{}
}

// WithPayload adds the payload to the set status info unauthorized response
func (o *SetStatusInfoUnauthorized) WithPayload(payload *models.InfraError) *SetStatusInfoUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the set status info unauthorized response
func (o *SetStatusInfoUnauthorized) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SetStatusInfoUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SetStatusInfoForbiddenCode is the HTTP code returned for type SetStatusInfoForbidden
const SetStatusInfoForbiddenCode int = 403

/*SetStatusInfoForbidden Forbidden.

swagger:response setStatusInfoForbidden
*/
type SetStatusInfoForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewSetStatusInfoForbidden creates SetStatusInfoForbidden with default headers values
func NewSetStatusInfoForbidden() *SetStatusInfoForbidden {

	return &SetStatusInfoForbidden{}
}

// WithPayload adds the payload to the set status info forbidden response
func (o *SetStatusInfoForbidden) WithPayload(payload *models.InfraError) *SetStatusInfoForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the set status info forbidden response
func (o *SetStatusInfoForbidden) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SetStatusInfoForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SetStatusInfoNotFoundCode is the HTTP code returned for type SetStatusInfoNotFound
const SetStatusInfoNotFoundCode int = 404

/*SetStatusInfoNotFound Error.

swagger:response setStatusInfoNotFound
*/
type SetStatusInfoNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewSetStatusInfoNotFound creates SetStatusInfoNotFound with default headers values
func NewSetStatusInfoNotFound() *SetStatusInfoNotFound {

	return &SetStatusInfoNotFound{}
}

// WithPayload adds the payload to the set status info not found response
func (o *SetStatusInfoNotFound) WithPayload(payload *models.Error) *SetStatusInfoNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the set status info not found response
func (o *SetStatusInfoNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SetStatusInfoNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SetStatusInfoMethodNotAllowedCode is the HTTP code returned for type SetStatusInfoMethodNotAllowed
const SetStatusInfoMethodNotAllowedCode int = 405

/*SetStatusInfoMethodNotAllowed Method Not Allowed.

swagger:response setStatusInfoMethodNotAllowed
*/
type SetStatusInfoMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewSetStatusInfoMethodNotAllowed creates SetStatusInfoMethodNotAllowed with default headers values
func NewSetStatusInfoMethodNotAllowed() *SetStatusInfoMethodNotAllowed {

	return &SetStatusInfoMethodNotAllowed{}
}

// WithPayload adds the payload to the set status info method not allowed response
func (o *SetStatusInfoMethodNotAllowed) WithPayload(payload *models.Error) *SetStatusInfoMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the set status info method not allowed response
func (o *SetStatusInfoMethodNotAllowed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SetStatusInfoMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SetStatusInfoInternalServerErrorCode is the HTTP code returned for type SetStatusInfoInternalServerError
const SetStatusInfoInternalServerErrorCode int = 500

/*SetStatusInfoInternalServerError Error.

swagger:response setStatusInfoInternalServerError
*/
type SetStatusInfoInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewSetStatusInfoInternalServerError creates SetStatusInfoInternalServerError with default headers values
func NewSetStatusInfoInternalServerError() *SetStatusInfoInternalServerError {

	return &SetStatusInfoInternalServerError{}
}

// WithPayload adds the payload to the set status info internal server error response
func (o *SetStatusInfoInternalServerError) WithPayload(payload *models.Error) *SetStatusInfoInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the set status info internal server error response
func (o *SetStatusInfoInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SetStatusInfoInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SetStatusInfoServiceUnavailableCode is the HTTP code returned for type SetStatusInfoServiceUnavailable
const SetStatusInfoServiceUnavailableCode int = 503

/*SetStatusInfoServiceUnavailable Unavailable.

swagger:response setStatusInfoServiceUnavailable
*/
type SetStatusInfoServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewSetStatusInfoServiceUnavailable creates SetStatusInfoServiceUnavailable with default headers values
func NewSetStatusInfoServiceUnavailable() *SetStatusInfoServiceUnavailable {

	return &SetStatusInfoServiceUnavailable{}
}

// WithPayload adds the payload to the set status info service unavailable response
func (o *SetStatusInfoServiceUnavailable) WithPayload(payload *models.Error) *SetStatusInfoServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the set status info service unavailable response
func (o *SetStatusInfoServiceUnavailable) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SetStatusInfoServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
